TODO
 * AHRS
   * Do some kind of evaluation / write-up
   * Provide a way to set configurable parameters like noise and gains and rotation
   * Do something better than asserting on NaN... report an error and
     allow for reset?

 * flash lights to actually mean something

 * Implement NRF communication protocol

 * Be able to report the firmware version
 * Be able to report errors back
 * If a packet is sent to a non-existent device, the entire thing
   hangs retransmitting forever
 * Remove high two bytes of CAN id to improve packing efficiency
 * Maybe switch registers to one byte to improve packing efficiency?
 * try to get communication reliable at 15MHz instead of just 10MHz

 * add "stored procedure" sends, so that all the queries to all
   servos, for instance can be sent with a 1 byte SPI command.

r4 ERRATA
 * NRF connector needs to be a female connector, not male
 * switch all CAN transceivers to something with preferably >= 40V common mode
 * Connect some pins from each uc to GPIOs on the rpi for IRQ or other
   general purposes

DONE 2020-03-04
 * Implemented accelerometer rejection for dynamic maneuvers
 * Implemented a term to keep the yaw bias uncertainty in check
 * Tuned constants a tiny bit
 * Diagnosed SPI timing problem and improved things

DONE 2020-03-03
 * Implemented AHRS

DONE 2020-03-01
 * got eeprom settings into git
 * Verified NRF works

DONE 2020-02-29
 * Verified IMU works

DONE 2020-02-28
 * add mjbots logo
 * Add debug pads to each processor

DONE 2020-01-29
 * route power
 * route SPI
 * route CAN
 * selected parts
 * route everything else
 * fine fix silks

DONE 2020-01-28
 * Fixed up stm32 pinouts
 * renumber caps
 * renumber resistors
 * renumber diodes
 * add overvoltage protection tvs
 * fine place all components
 * rough silks
 * route planes

r3 DONE
 * Added pullup to RT8299 EN

r2 ERRATA
 * RT8299 EN needs a 100k pullup to VIN

# r1 #

* R1 is 10.5k instead of 105k
